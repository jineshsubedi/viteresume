import{_ as e,o,c as a,R as t}from"./chunks/framework.1FgxV26S.js";const u=JSON.parse('{"title":"My Blogs","description":"","frontmatter":{"title":"My Blogs"},"headers":[],"relativePath":"blog/index.md","filePath":"blog/index.md"}'),r={name:"blog/index.md"},l=t('<h1 id="my-blogs" tabindex="-1">My Blogs <a class="header-anchor" href="#my-blogs" aria-label="Permalink to &quot;My Blogs&quot;">​</a></h1><h2 id="oracle-to-postgresql-sql-converter-tool" tabindex="-1">Oracle to PostgreSQL SQL Converter Tool <a class="header-anchor" href="#oracle-to-postgresql-sql-converter-tool" aria-label="Permalink to &quot;Oracle to PostgreSQL SQL Converter Tool&quot;">​</a></h2><h3 id="date-january-3-2023" tabindex="-1">Date: January 3, 2023 <a class="header-anchor" href="#date-january-3-2023" aria-label="Permalink to &quot;Date: January 3, 2023&quot;">​</a></h3><p>If you&#39;re transitioning from Oracle to PostgreSQL and need to convert your SQL queries, this simple tool can help streamline the process. It provides a user-friendly interface for converting Oracle-specific syntax to PostgreSQL.</p><p><a href="./../blog/oracletopgsql.html">Oracle To PgSQL</a></p>',5),s=[l];function n(i,c,d,_,h,p){return o(),a("div",null,s)}const f=e(r,[["render",n]]);export{u as __pageData,f as default};
